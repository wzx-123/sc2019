<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.goods.dao.GoodsDao">
    <!--统计是否出现重复的书号个数-->
    <select id="countBookNumber" parameterType="java.lang.String" resultType="int">
        select count(isbn)
        from t_info_goods
        where isbn = #{isbn}
        and is_delete = 0
    </select>

    <!--新增商品-->
    <insert id="addGoods" parameterType="com.xzsd.pc.goods.entity.Goods">
        insert into t_info_goods(
            goods_id,
            goods_name,
            store_id,
            supplier_name,
            goods_author,
            goods_press,
            isbn,
            image_path,
            goods_original_cost,
            goods_price,
            goods_cost,
            goods_sales,
            goods_inventory,
            goods_describe,
            goods_advertise,
            one_classify_id,
            two_classify_id,
            goods_state_id,
            goods_views_num,
            goods_shelf_time,
            star_level,
            is_delete,
            create_time,
            create_user,
            update_time,
            version
        )
        values(
            #{goodsId},
            #{goodsName},
            #{storeId},
            #{supplierName},
            #{goodsAuthor},
            #{goodsPress},
            #{isbn},
            #{imagePath},
            #{goodsOriginalCost},
            #{goodsPrice},
            #{goodsCost},
            0,
            #{goodsInventory},
            #{goodsDescribe},
            #{goodsAdvertise},
            #{oneClassifyId},
            #{twoClassifyId},
            3,
            0,
            now(),
            0,
            0,
            now(),
            #{createUser},
            now(),
            0
        )
    </insert>

    <!--查询商品详情-->
    <select id="getGoodsInfoById" parameterType="java.lang.String" resultType="com.xzsd.pc.goods.entity.GoodsVTO">
        select
        t1.goods_id goodsId,
        t1.goods_name goodsName,
        t1.isbn isbn,
        t1.goods_advertise goodsAdvertise,
        t1.goods_describe goodsDescribe,
        t2.classify_id oneClassifyName,
        t3.classify_id twoClassifyName,
        t1.one_classify_id as oneClassifyId,
        t1.two_classify_id as twoClassifyId,
        t1.supplier_name supplierName,
        t1.goods_inventory goodsInventory,
        t1.goods_original_cost goodsOriginalCost,
        t1.goods_price goodsPrice,
        t1.goods_cost goodsCost,
        t1.goods_press goodsPress,
        t1.goods_author goodsAuthor,
        t1.image_path goodsImagePath,
        t1.version version
        from t_info_goods t1, t_info_goods_classify t2, t_info_goods_classify t3
        where t1.goods_id = #{goodsId}
        and t2.classify_id = t1.one_classify_id
        and t3.classify_id = t1.two_classify_id
    </select>

    <!--查询商品一二级分类列表-->
    <select id="getListGoodsCategory" parameterType="java.lang.String"
            resultType="com.xzsd.pc.goodsClassify.entity.GoodsClassifyVO">
        select
        classify_id classifyId,
        classify_name classifyName,
        classify_level as classifyLevel
        from t_info_goods_classify
        where classify_parent = #{classifyId}
        and is_delete = 0
    </select>

    <!--修改商品的信息-->
    <update id="updateGoodsInfo" parameterType="com.xzsd.pc.goods.entity.Goods">
        update t_info_goods
        set
            goods_name = #{goodsName},
            isbn = #{isbn},
            one_classify_id = #{oneClassifyId},
            two_classify_id = #{twoClassifyId},
            goods_advertise = #{goodsAdvertise},
            goods_describe = #{goodsDescribe},
            supplier_name = #{supplierName},
            goods_inventory = #{goodsInventory},
            goods_original_cost = #{goodsOriginalCost},
            goods_price = #{goodsPrice},
            goods_cost = #{goodsCost},
            goods_press = #{goodsPress},
            goods_author = #{goodsAuthor},
            image_path = #{imagePath},
            update_user = #{updateUser},
            update_time = now(),
            version = version + 1
            where goods_id = #{goodsId}
            and version = #{version}
    </update>

    <!--查询商品列表（分页）-->
    <select id="getListGoods" parameterType="com.xzsd.pc.goods.entity.Goods"
            resultType="com.xzsd.pc.goods.entity.GoodsVO">
        select
        t1.goods_id goodsId,
        t1.goods_name goodsName,
        t1.goods_cost goodsCost,
        t1.goods_price goodsPrice,
        t1.goods_sales goodsSales,
        t2.classify_name oneClassifyName,
        t3.classify_name twoClassifyName,
        t1.goods_advertise goodsAdvertise,
        t1.goods_describe goodsDescribe,
        t1.goods_state_id goodsStateId,
        t1.goods_shelf_time goodsShelfTime,
        t1.goods_views_num goodsViewsNum,
        t1.supplier_name supplierName,
        t1.goods_inventory goodsInventory,
        t1.isbn isbn,
        t1.store_id storeId,
        t1.image_path goodsImagePath,
        t1.version version
        from t_info_goods t1, t_info_goods_classify t2, t_info_goods_classify t3
        where t1.is_delete = 0
        and t2.classify_id = t1.one_classify_id
        and t3.classify_id = t1.two_classify_id
        <if test="goodsName != null and goodsName != null">
            and t1.goods_name like concat('%', #{goodsName}, '%')
        </if>
        <if test="goodsStateId != null and goodsStateId != ''">
            and t1.goods_state_id = #{goodsStateId}
        </if>
        <if test="goodsAdvertise != null and goodsAdvertise != ''">
            and t1.goods_advertise like concat('%', #{goodsAdvertise}, '%')
        </if>
        <if test="goodsPress != null and goodsPress != ''">
            and t1.goods_press like concat('%', #{goodsPress}, '%')
        </if>
        <if test="goodsAuthor != null and goodsAuthor != ''">
            and t1.goods_author like concat('%', #{goodsAuthor}, '%')
        </if>
        order by t1.create_time desc
    </select>

    <!--修改商品状态-->
    <update id="updateGoodsStatus" parameterType="java.util.List">
        <foreach item="item" index="index" collection="goodsInfoList" open="" separator=";" close="">
            update t_info_goods
            set
            goods_state_id = #{item.goodsStateId},
            update_time = now(),
            update_user = #{item.updateUser, jdbcType=VARCHAR},
            version = version + 1
            <where>
                goods_id = #{item.goodsId, jdbcType=VARCHAR}
                and version = #{item.version, jdbcType=VARCHAR}
            </where>
        </foreach>
    </update>

    <!--删除商品-->
    <update id="deleteGoods" parameterType="java.lang.String">
        update t_info_goods
        set
        is_delete = 1,
        update_user = #{loginId},
        update_time = now(),
        version = version + 1
        where goods_id in
        <foreach item="goodsId" index="index" collection="listGoodsId" open="(" separator="," close=")">
            #{goodsId}
        </foreach>
    </update>

    <!--查询删除的商品是否已经被轮播图或热门商品使用-->
    <select id="querySlideAndHotGoods" parameterType="java.lang.String" resultType="java.lang.String">
        select
        distinct t1.goods_id as goodsId
        from t_info_goods t1, t_info_slideshow_home t2, t_info_hot_goods t3
        where (t1.goods_id = t2.goods_id or t1.id = t3.goods_id)
        and t1.is_delete = 0
        and t2.is_delete = 0
        and t3.is_delete = 0
        and t1.goods_id in
        <foreach item="goodsId" index="index" collection="listGoodsId" open="(" separator="," close=")">
            #{goodsId}
        </foreach>
    </select>
</mapper>